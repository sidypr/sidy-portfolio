import React, { useState, useCallback } from 'react';
import { Link } from 'react-router-dom';
import './SpotifyMobileProject.css';

// Import de toutes les images Spotify Mobile
import spotifyImg1 from '../photo/image &spotifyappmobile_0441.PNG';
import spotifyImg2 from '../photo/image &spotifyappmobile_0442.PNG';
import spotifyImg3 from '../photo/image &spotifyappmobile_0443.PNG';
import spotifyImg4 from '../photo/image &spotifyappmobile_0444.PNG';
import spotifyImg5 from '../photo/image &spotifyappmobile_0445.PNG';
import spotifyImg6 from '../photo/image &spotifyappmobile_0446.PNG';
import spotifyImg7 from '../photo/image &spotifyappmobile_0447.PNG';
import spotifyImg8 from '../photo/image &spotifyappmobile_0448.PNG';
import spotifyImg9 from '../photo/image &spotifyappmobile_0449.PNG';
import spotifyImg10 from '../photo/image &spotifyappmobile_0450.PNG';
import spotifyImg11 from '../photo/image &spotifyappmobile_0451.PNG';
import spotifyImg12 from '../photo/image &spotifyappmobile_0452.PNG';
import spotifyImg13 from '../photo/image &spotifyappmobile_0453.PNG';
import spotifyImg14 from '../photo/image &spotifyappmobile_0454.PNG';

const SpotifyMobileProject = () => {
  const [selectedImage, setSelectedImage] = useState(null);
  const [currentIndex, setCurrentIndex] = useState(0);

  const images = [
    spotifyImg1, spotifyImg2, spotifyImg3, spotifyImg4, spotifyImg5,
    spotifyImg6, spotifyImg7, spotifyImg8, spotifyImg9, spotifyImg10,
    spotifyImg11, spotifyImg12, spotifyImg13, spotifyImg14
  ];

  const openModal = (index) => {
    setCurrentIndex(index);
    setSelectedImage(images[index]);
  };

  const closeModal = useCallback(() => {
    setSelectedImage(null);
  }, []);

  const navigateImage = useCallback((direction) => {
    const newIndex = direction === 'next' 
      ? (currentIndex + 1) % images.length 
      : (currentIndex - 1 + images.length) % images.length;
    setCurrentIndex(newIndex);
    setSelectedImage(images[newIndex]);
  }, [currentIndex, images.length]);

  // Gestion clavier
  React.useEffect(() => {
    const handleKeyDown = (e) => {
      if (!selectedImage) return;
      
      switch (e.key) {
        case 'Escape':
          closeModal();
          break;
        case 'ArrowLeft':
          navigateImage('prev');
          break;
        case 'ArrowRight':
          navigateImage('next');
          break;
        default:
          break;
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, [selectedImage, closeModal, navigateImage]);

  const technologies = [
    { name: 'React Native', icon: 'devicon-react-original' },
    { name: 'Expo', icon: 'devicon-expo-original' },
    { name: 'TypeScript', icon: 'devicon-typescript-original' },
    { name: 'JavaScript', icon: 'devicon-javascript-original' },
    { name: 'Node.js', icon: 'devicon-nodejs-original' },
    { name: 'Git', icon: 'devicon-git-original' },
    { name: 'GitHub', icon: 'devicon-github-original' }
  ];

  return (
    <div className="spotify-mobile-project">
      <header className="project-header">
        <Link to="/projects" className="back-link">‚Üê Retour aux projets</Link>
        <div className="project-title-section">
          <h1 className="project-title">Spotify Stats Mobile</h1>
          <p className="project-subtitle">Application mobile React Native avec Expo</p>
          <div className="project-main-links">
            <a href="https://github.com/sidypr/stats-Spotify-mob" target="_blank" rel="noopener noreferrer" className="project-link-btn primary">
              Voir sur GitHub
            </a>
          </div>
        </div>
      </header>

      <div className="project-content">
        <section className="project-overview">
          <h2>Vue d'ensemble</h2>
          <p>
            Application mobile React Native d√©velopp√©e avec Expo qui permet aux utilisateurs de visualiser leurs 
            statistiques d'√©coute Spotify et g√©rer leurs playlists. L'application offre une exp√©rience utilisateur 
            moderne avec authentification OAuth2, navigation par onglets et interface inspir√©e de Spotify.
          </p>
        </section>

        <section className="project-features">
          <h2>Fonctionnalit√©s principales</h2>
          <div className="features-grid">
            <div className="feature-card">
              <h3>Authentification s√©curis√©e</h3>
              <p>Connexion OAuth2 avec Spotify, gestion des tokens d'acc√®s et d√©connexion avec nettoyage des donn√©es</p>
            </div>
            <div className="feature-card">
              <h3>Navigation par onglets</h3>
              <p>6 onglets : Accueil, Statistiques, Playlists, Recherche, Aide et Profil pour une navigation intuitive</p>
            </div>
            <div className="feature-card">
              <h3>Gestion des playlists</h3>
              <p>Affichage de toutes vos playlists Spotify avec barre de recherche, visualisation des titres et acc√®s aux titres lik√©s</p>
            </div>
            <div className="feature-card">
              <h3>Recherche avanc√©e</h3>
              <p>Recherche multi-cat√©gories (titres, artistes, albums) avec filtrage par onglets et historique des recherches</p>
            </div>
            <div className="feature-card">
              <h3>Interface moderne</h3>
              <p>Th√®me sombre inspir√© de Spotify avec animations fluides et UX optimis√©e pour mobile</p>
            </div>
            <div className="feature-card">
              <h3>Configuration iOS</h3>
              <p>Application pr√™te pour le d√©veloppement et le d√©ploiement mobile sur iOS</p>
            </div>
          </div>
        </section>

        <section className="project-tech">
          <h2>Architecture technique</h2>
          
          <div className="tech-structure">
            <h3>Structure des dossiers</h3>
            <div className="folder-structure">
              <pre>{`
üìÅ app/                 # Pages et navigation
üìÅ components/          # Composants r√©utilisables  
üìÅ hooks/              # Custom hooks (useAuth)
üìÅ services/           # API Spotify
üìÅ config/             # Configuration
üìÅ assets/             # Images et ressources
üìÅ ios/               # Configuration iOS
              `}</pre>
            </div>
          </div>

          <div className="technologies-used">
            <h3>Technologies utilis√©es</h3>
            <div className="tech-logos">
              {technologies.map((tech, index) => (
                <div key={index} className="tech-item">
                  <i className={tech.icon}></i>
                  <span>{tech.name}</span>
                </div>
              ))}
            </div>
          </div>

          <div className="tech-details">
            <div className="tech-category">
              <h4>Framework Mobile</h4>
              <p><strong>React Native + Expo</strong> - Framework de d√©veloppement mobile multiplateforme</p>
            </div>
            <div className="tech-category">
              <h4>Langage</h4>
              <p><strong>TypeScript</strong> - Typage statique pour un code plus robuste et maintenable</p>
            </div>
            <div className="tech-category">
              <h4>Navigation</h4>
              <p><strong>Expo Router</strong> - Syst√®me de navigation moderne et performant</p>
            </div>
            <div className="tech-category">
              <h4>Stockage</h4>
              <p><strong>AsyncStorage</strong> - Stockage local asynchrone pour les donn√©es utilisateur</p>
            </div>
            <div className="tech-category">
              <h4>API</h4>
              <p><strong>Spotify Web API</strong> - Int√©gration compl√®te avec les donn√©es musicales Spotify</p>
            </div>
          </div>
        </section>

        <section className="project-gallery">
          <h2>Aper√ßu de l'application</h2>
          <div className="gallery-grid">
            {images.map((image, index) => (
              <div key={index} className="gallery-item" onClick={() => openModal(index)}>
                <img src={image} alt={`Spotify Mobile ${index + 1}`} />
              </div>
            ))}
          </div>
        </section>

        <section className="project-status">
          <h2>√âtat du projet</h2>
          <div className="status-grid">
            <div className="status-item completed">
              <span className="status-icon">‚úÖ</span>
              <span>Authentification fonctionnelle</span>
            </div>
            <div className="status-item completed">
              <span className="status-icon">‚úÖ</span>
              <span>Playlists avec recherche et titres lik√©s</span>
            </div>
            <div className="status-item completed">
              <span className="status-icon">‚úÖ</span>
              <span>Recherche repositionn√©e</span>
            </div>
            <div className="status-item completed">
              <span className="status-icon">‚úÖ</span>
              <span>Interface moderne et responsive</span>
            </div>
            <div className="status-item completed">
              <span className="status-icon">‚úÖ</span>
              <span>Configuration iOS pr√™te</span>
            </div>
            <div className="status-item completed">
              <span className="status-icon">‚úÖ</span>
              <span>Code publi√© sur GitHub</span>
            </div>
          </div>
          <p className="status-conclusion">
            L'application est <strong>pr√™te pour le d√©veloppement</strong> et le d√©ploiement mobile !
          </p>
        </section>
      </div>

      {selectedImage && (
        <div className="modal-overlay" onClick={closeModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <button className="modal-close" onClick={closeModal}>√ó</button>
            <button className="modal-nav modal-prev" onClick={() => navigateImage('prev')}>‚Äπ</button>
            <img src={selectedImage} alt="Spotify Mobile" className="modal-image" />
            <button className="modal-nav modal-next" onClick={() => navigateImage('next')}>‚Ä∫</button>
            <div className="modal-counter">
              {currentIndex + 1} / {images.length}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default SpotifyMobileProject; 